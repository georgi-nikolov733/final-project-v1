name: Deployment-of-python-app
on:
  push:
    branches: [ master ]
jobs:
  cred-check:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Detect Secrets
      uses: RobertFischer/detect-secrets-action@v2.0.0
    - name: Commit back .secrets.baseline (if it was missing)
      uses: stefanzweifel/git-auto-commit-action@v4.12.0
      with:
          commit_message: "build(detect-secrets): Commit the newly-generated .secrets.baseline file"
  lint:
    needs: cred-check
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pylint-exit
    - name: Lint with pylint
      run: |
        find . -name 'example.py' -exec pylint {} \;
  style:
    needs: cred-check
    runs-on: ubuntu-latest    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install pycodestyle
    - name: Style with pycodestyle
      run: |
        python --version
        pycodestyle *.py
  SAST:
    needs: cred-check  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build: 
    needs: [lint, style, SAST]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.9
    - run: |
            ls -a
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: example.py
        path: example.py
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Unit testing
      run: |
           python --version 
           python3 -m doctest example.py
  get-artefact:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: example.py
    - name: Display structure of downloaded files
      run: ls -R
  docker:
    needs: get-artefact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:${{ github.sha }}, latest
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "latest"

    - name: Update Kubernetes resources
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
       cd kustomize/base
       kustomize edit set image final-project-v1=$DOCKER_USERNAME/app:$GITHUB_SHA
       cat kustomization.yaml
        
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    